STEP 0: Inventory

# Make a list of files here. Write a 3-10 word description of what each file does.

Ls8
1. cpu.c : reads RAM and writes to RAM, run the CPU, run ALU operations

2. cpu.h : holds the information about the CPU [PC, registers, ram] and the ALU operations

3. ls8.c : Main

# Note what has been implemented, and what hasn't.

# Read this whole file.

# Skim the spec.

----------------------------

DAY 1: Get print8.ls8 running

X Inventory what is here
X Implement struct cpu in cpu.h
X Add RAM functions cpu_ram_read() and cpu_ram_write()
X Implement cpu_init()
_ Implement the core of cpu_run()
_ Implement the HLT instruction handler
_ Add the LDI instruction
_ Add the PRN instruction

----------------------------

DAY 2: Add the ability to load files dynamically, get mult.ls8 and stack.ls8 running

_ Un-hardcode the machine code
_ Implement the cpu_load() function to load an .ls8 file given the filename passed in as an argument
_ Implement a Multiply instruction and Print the result (run mult8.ls8)

----------------------------

DAY 3: Stack

_ Implement the System Stack and be able to run the stack.ls8 program

----------------------------

DAY 4: Get call.ls8 running

_ Implement the CALL and RET instructions
_ Implement Subroutine Calls and be able to run the call.ls8 program

----------------------------

STRETCH

_ Add the timer interrupt to the LS-8 emulator
_ Add the keyboard interrupt to the LS-8 emulator
_ Write an LS-8 assembly program to draw a curved histogram on the screen